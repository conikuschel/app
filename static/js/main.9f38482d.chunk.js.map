{"version":3,"sources":["Chat.js","App.js","reportWebVitals.js","index.js"],"names":["Chat","socket","username","useState","currentMessage","setCurrentMessage","messageList","setMessageList","truckList","setTruckList","truckList2","setTruckList2","markers","setMarkers","map","setMap","cont","setCont","emit","sendMessage","a","messageData","message","name","Arreglar","codigo","datito","code","console","log","useEffect","on","data","Object","keys","length","clonedArray","position","setLatLng","clonedMarkers","L","window","marker","addTo","bindPopup","ev","openPopup","off","states","source","list","once","listaca","forEach","element","par_od","arrow","polyline","origin","destination","polylineDecorator","patterns","offset","repeat","symbol","Symbol","arrowHead","pixelSize","pathOptions","fillOpacity","weight","panTo","LatLng","MapContainer","center","zoom","whenCreated","TileLayer","url","attribution","className","messageContent","id","Date","date","substring","type","value","placeholder","onChange","event","target","onKeyPress","key","onClick","class","values","card","index","colorcito","Card","style","width","background","Body","Title","Text","capacity","engine","JSON","stringify","staff","truck","Button","variant","io","path","err","App","setUsername","showChat","setShowChat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f38482d.chunk.js","sourcesContent":["import React, { useEffect, useState} from \"react\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport { TileLayer, Marker, Popup, MapContainer } from 'react-leaflet';\r\nimport  \"leaflet-polylinedecorator\";\r\nimport { Card } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction Chat({ socket, username}) {\r\n  const [currentMessage, setCurrentMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n  const [truckList, setTruckList] = useState({});\r\n  const [truckList2, setTruckList2] = useState([]);\r\n  const [markers, setMarkers] = useState({});\r\n  const [map, setMap] = useState(null);\r\n  const [cont, setCont] = useState(1);\r\n\r\n  if (truckList === {}){\r\n    socket.emit(\"TRUCKS\");\r\n  }\r\n\r\n  const sendMessage = async () => {\r\n    if (currentMessage !== \"\") {\r\n      const messageData = {\r\n        message: currentMessage,\r\n        name: username\r\n      };\r\n\r\n      await socket.emit(\"CHAT\", messageData);\r\n    }\r\n  };\r\n\r\n  const renderCard = (card, index) => {\r\n    let origencito;\r\n    let destini;\r\n    if (card.states !== \"Ok\"){\r\n      var colorcito = \"#ffb3b3\";\r\n    } else{\r\n      var colorcito = \"#d6f5d6\";\r\n    }\r\n    //const response = await fetch(`https://www.mapquestapi.com/geocoding/v1/reverse?key=ZVuZaJ5AAntG5DdAHPWaAraaLz5VznEi&location=${card?.origin[0]},${card?.origin[1]}&outFormat=json&thumbMaps=false`).then((response) => response.json())\r\n    //fetch(`https://www.mapquestapi.com/geocoding/v1/reverse?key=ZVuZaJ5AAntG5DdAHPWaAraaLz5VznEi&location=${card?.origin[0]},${card?.origin[1]}&outFormat=json&thumbMaps=false`).then((response) => response.json()).then((data) => origencito = data.results[0].locations[0].adminArea5)\r\n    //fetch(`https://www.mapquestapi.com/geocoding/v1/reverse?key=ZVuZaJ5AAntG5DdAHPWaAraaLz5VznEi&location=${card?.destination[0]},${card?.destination[1]}&outFormat=json&thumbMaps=false`).then((response) => response.json()).then((data) => destini = data.results[0].locations[0].adminArea5)\r\n    return (\r\n      <Card style={{ width: \"18rem\", background: colorcito}} key={index} className=\"box\">\r\n        <Card.Body>\r\n          <Card.Title>Cami√≥n {card.code}</Card.Title>\r\n          <Card.Text>Origen: {card.origin}</Card.Text>\r\n          <Card.Text>Destino: {card.destination}</Card.Text>\r\n          <Card.Text>Estado: {card?.states}</Card.Text>\r\n          <Card.Text>Capacidad: {card.capacity}</Card.Text>\r\n          <Card.Text>Engine: {card.engine}</Card.Text>\r\n          <Card.Text>Staff: {JSON.stringify(card.staff[0], null, 4)}</Card.Text>\r\n          <Card.Text>Truck: {card.truck}</Card.Text> \r\n          {card?.states !== \"Ok\" && <Button onClick={() => Arreglar(card?.code)} variant=\"primary\">Arreglar</Button>}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const Arreglar = (codigo) => {\r\n    const datito = {\r\n      code: codigo\r\n    };\r\n    console.log(\"soyyo\");\r\n    console.log(codigo);\r\n    socket.emit(\"FIX\", datito);\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"POSITION\", (data) => {\r\n      if (Object.keys(truckList).length){\r\n        let clonedArray = truckList\r\n        clonedArray[data.code].position = data.position;\r\n        if (data.code in markers){\r\n          markers[data.code].setLatLng(data.position);\r\n        } else {\r\n          let clonedMarkers = markers;\r\n          var L = window.L;\r\n          clonedMarkers[data.code] = L.marker(data.position).addTo(map).bindPopup(data.code);\r\n          clonedMarkers[data.code].on('mouseover',function(ev) {\r\n            clonedMarkers[data.code].openPopup();\r\n          });\r\n          setMarkers(clonedMarkers);\r\n        }\r\n        setTruckList(clonedArray);\r\n      }  \r\n    });\r\n    return()=>{\r\n    socket.off('POSITION')\r\n    }\r\n  }, [truckList, markers]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"FIX\", (data) => {\r\n      if (Object.keys(truckList).length){\r\n        let clonedArray = truckList;\r\n        if (clonedArray[data.code]?.states !== \"Ok\"){\r\n          clonedArray[data.code].states = \"Ok\";\r\n          setTruckList(clonedArray);\r\n          console.log(clonedArray[data.code].states);\r\n        }\r\n      }  \r\n    });\r\n    return()=>{\r\n    socket.off('FIX')\r\n    }\r\n  }, [truckList]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"FAILURE\", (data) => {\r\n      if (Object.keys(truckList).length){\r\n        let clonedArray = truckList;\r\n        if (clonedArray[data.code]?.states !== data.source){\r\n          clonedArray[data.code].states = data.source;\r\n          setTruckList(clonedArray);\r\n          console.log(data);\r\n        }\r\n      }\r\n    });\r\n    return()=>{\r\n    socket.off('FAILURE')\r\n    }\r\n  }, [truckList]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"CHAT\", (data) => {\r\n      setMessageList((list) => [...list, data]);\r\n    });\r\n    return()=>{\r\n    socket.off('CHAT')\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.once(\"TRUCKS\", (data) => {\r\n      if (cont === 1){\r\n        var listaca = {}\r\n        data.forEach(function (element) {\r\n          element.states = \"Ok\";\r\n          listaca[element.code] = element;\r\n        });\r\n        setTruckList2(data);\r\n        setTruckList(listaca);\r\n        truckList2.forEach(function(par_od)  {\r\n          var L = window.L;\r\n          var arrow = L.polyline([\r\n            par_od.origin,\r\n            par_od.destination\r\n          ], {}).addTo(map);\r\n          L.polylineDecorator(arrow, {\r\n            patterns: [\r\n              {offset: '10%', repeat: '30%',  symbol: L.Symbol.arrowHead({pixelSize: 15, pathOptions: {fillOpacity: 1, weight: 0}})}\r\n            ]\r\n          }).addTo(map); \r\n          if (cont === 1){\r\n            map.panTo(new L.LatLng(par_od.origin[0],par_od.origin[1]));\r\n            setCont(2);\r\n          }\r\n        });\r\n      } \r\n    });\r\n    return()=>{\r\n    socket.off('TRUCKS')\r\n    }\r\n  }, [truckList, truckList2, cont]);\r\n\r\n  return (\r\n    <>\r\n      <MapContainer center={[-33.27, -70.4]} zoom={10} whenCreated={setMap}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n      </MapContainer>\r\n      <div className=\"chat-window\">\r\n        <div className=\"chat-header\">\r\n          <p>Centro de Control</p>\r\n        </div>\r\n        <div className=\"chat-body\">\r\n          <ScrollToBottom className=\"message-container\">\r\n            {messageList.map((messageContent) => {\r\n              return (\r\n                <div\r\n                  className=\"message\"\r\n                  id={username === messageContent.name ? \"you\" : \"other\"}\r\n                >\r\n                  <div>\r\n                    <div className=\"message-content\">\r\n                      <p>{messageContent.message}</p>\r\n                    </div>\r\n                    <div className=\"message-meta\">\r\n                      <p id=\"date\">{Date(messageContent.date).substring(0,21)}</p>\r\n                      <p id=\"name\">{messageContent.name}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </ScrollToBottom>\r\n        </div>\r\n        <div className=\"chat-footer\">\r\n          <input\r\n            type=\"text\"\r\n            value={currentMessage}\r\n            placeholder=\"Escribe algo...\"\r\n            onChange={(event) => {\r\n              setCurrentMessage(event.target.value);\r\n            }}\r\n            onKeyPress={(event) => {\r\n              event.key === \"Enter\" && sendMessage();\r\n            }}\r\n          />\r\n          <button onClick={sendMessage}>&#9658;</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-group\" id=\"cardis\">\r\n        {Object.values(truckList).map(renderCard)}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import \"./App.css\";\r\nimport io from \"socket.io-client\";\r\nimport { useState } from \"react\";\r\nimport Chat from \"./Chat\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst socket = io(\"https://tarea-3-websocket.2021-2.tallerdeintegracion.cl\", {\r\n  path: \"/trucks/\"});\r\n\r\nsocket.on(\"connect_error\", (err) => {\r\n  console.log(`connect_error due to ${err.message}`);\r\n});\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [showChat, setShowChat] = useState(false);\r\n  socket.emit(\"TRUCKS\");\r\n\r\n  const joinRoom = () => {\r\n    if (username !== \"\") {\r\n      setShowChat(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!showChat ? (\r\n        <div className=\"joinChatContainer\">\r\n          <h3>Control de Camiones</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre o Nickname...\"\r\n            onChange={(event) => {\r\n              setUsername(event.target.value);\r\n            }}\r\n          />\r\n          <button onClick={joinRoom}>Join</button>\r\n        </div>\r\n      ) : (\r\n        <Chat socket={socket} username={username}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}